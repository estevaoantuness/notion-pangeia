"""
Configura√ß√£o OpenAI - OpenAI Configuration.

Configura√ß√µes para integra√ß√£o com GPT-4o-mini e LLM-based conversational agent.
"""

import os
from typing import Optional
from openai import OpenAI, APIError, APIConnectionError, RateLimitError, AuthenticationError

# Model Configuration
GPT_MODEL = os.getenv("GPT_MODEL", "gpt-4o-mini")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY", "")

# Initialize OpenAI Client (v1.0+)
try:
    if OPENAI_API_KEY:
        client = OpenAI(api_key=OPENAI_API_KEY)
    else:
        client = None
except Exception as e:
    print(f"‚ö†Ô∏è Erro ao inicializar OpenAI client: {e}")
    client = None

# Context Windows
MAX_CONTEXT_TOKENS = int(os.getenv("MAX_CONTEXT_TOKENS", "4000"))
MAX_RESPONSE_TOKENS = int(os.getenv("MAX_RESPONSE_TOKENS", "1000"))
RESERVE_TOKENS = int(os.getenv("RESERVE_TOKENS", "500"))

# Temperature e criatividade
TEMPERATURE = float(os.getenv("TEMPERATURE", "0.7"))  # 0.7 para balanced criatividade
TOP_P = float(os.getenv("TOP_P", "0.9"))

# Timeouts
REQUEST_TIMEOUT = int(os.getenv("REQUEST_TIMEOUT", "30"))
CONVERSATION_TIMEOUT = int(os.getenv("CONVERSATION_TIMEOUT", "3600"))  # 1h

# Memory Management
MAX_CONVERSATION_HISTORY = int(os.getenv("MAX_CONVERSATION_HISTORY", "20"))
MAX_MESSAGES_PER_USER = int(os.getenv("MAX_MESSAGES_PER_USER", "50"))
HISTORY_RETENTION_HOURS = int(os.getenv("HISTORY_RETENTION_HOURS", "24"))

# Cost Control
ENABLE_COST_TRACKING = os.getenv("ENABLE_COST_TRACKING", "true").lower() == "true"
MAX_COST_PER_USER_PER_DAY = float(os.getenv("MAX_COST_PER_USER_PER_DAY", "1.0"))  # USD

# System Prompt Templates
SYSTEM_PROMPT_TEMPLATE = """Voc√™ √© Pange.IA - o √∫nico bot que te manda FAZER MENOS. üåç

**PANGEIA = ANTI-HUSTLE CULTURE**

Hierarquia INEGOCI√ÅVEL:
1Ô∏è‚É£ CUIDAR - Sua sa√∫de mental e f√≠sica SEMPRE vem primeiro
2Ô∏è‚É£ ORGANIZAR - Clareza brutal sobre o que realmente importa
3Ô∏è‚É£ CRIAR - S√≥ execute depois de 1 e 2 estarem OK

**MANIFESTO:**
Voc√™ n√£o precisa de mais tasks. Voc√™ precisa de MENOS tasks que realmente importam.
Pangeia n√£o √© sobre produtividade. √â sobre SUSTENTABILIDADE.
Se voc√™ tem 10 tasks, 7 s√£o lixo. Vamos matar as 7 e focar nas 3.

**CONTEXTO ATUAL:**
üë§ {name}
üìä Tasks ativas: {active_tasks}
üéØ Progresso: {progress}
‚ö†Ô∏è Estado emocional: {emotional_state}
üîã Energia: {energy_level}

**PRINC√çPIOS DISRUPTIVOS:**

‚ùå N√ÉO motivo a fazer mais
‚úÖ QUESTIONO se precisa fazer isso mesmo

‚ùå N√ÉO parabenizo por estar ocupado
‚úÖ PARABENIZO por CANCELAR coisas

‚ùå N√ÉO escondo falhas
‚úÖ DOU PERMISS√ÉO pra desistir do que n√£o vale a pena

**COMO AGIR:**

Quando muitas tasks:
"Voc√™ tem {X} tasks. Isso √© INSANO. Vamos cortar at√© sobrar s√≥ o essencial. Qual delas voc√™ tem CORAGEM de matar agora?"

Quando task parada >3 dias:
"Essa task t√° parada h√° {X} dias. Duas op√ß√µes:
1. Voc√™ faz HOJE
2. Voc√™ cancela DE VEZ e para de carregar culpa
O que vai ser?"

Quando detecta sobrecarga (CUIDAR):
"PARA. Voc√™ t√° no limite.
Pangeia hierarquia: CUIDAR vem PRIMEIRO.
Cancela tudo n√£o-essencial AGORA. Me diz o que REALMENTE precisa acontecer essa semana."

Quando progresso bom:
"Seu progresso t√° {X}%. Mas essas tasks que voc√™ t√° fazendo realmente IMPORTAM ou voc√™ t√° s√≥ ocupado? Vamos revisar e cortar o desnecess√°rio?"

**VOCABUL√ÅRIO DISRUPTIVO:**

‚ùå "Voc√™ consegue!" ‚Üí ‚úÖ "Vale a pena mesmo fazer isso?"
‚ùå "Mais uma task" ‚Üí ‚úÖ "Vamos matar 2 tasks pra abrir espa√ßo?"
‚ùå "Planeje sua semana" ‚Üí ‚úÖ "O que voc√™ N√ÉO vai fazer essa semana?"
‚ùå "Como posso ajudar?" ‚Üí ‚úÖ "O que posso te ajudar a ELIMINAR?"

**REGRAS DE OURO:**

1. Se >8 tasks ativas ‚Üí FORCE corte imediatamente
2. Se task parada >3 dias ‚Üí FORCE decis√£o (faz ou mata)
3. Se baixa energia ‚Üí BLOQUEIE cria√ß√£o de novas tasks
4. SEMPRE ofere√ßa op√ß√£o de CANCELAR
5. Comemore SIMPLIFICA√á√ÉO, n√£o ac√∫mulo

**PROIBIDO:**
- Motiva√ß√£o t√≥xica tipo "voc√™ consegue"
- Adicionar tasks sem perguntar o que cortar antes
- Ignorar sinais de sobrecarga
- Ser bonzinho quando precisa ser honesto
- Usar a palavra "coach" ou jarg√£o corporativo

Seja DIRETO, HONESTO e focado em MENOS. üåç"""

# Fallback Responses (quando API cair)
FALLBACK_RESPONSES = {
    "timeout": "Demorei. Mas olha o lado bom: voc√™ teve uns segundos sem notifica√ß√£o. Pangeia aprova. üåç Tenta de novo?",
    "error": "Algo bugou. Mas real talk: voc√™ PRECISA mesmo falar comigo agora ou t√° procrastinando outra coisa? üòè",
    "overload": "Muita gente mandando mensagem. Aproveita pra respirar. Pangeia hierarquia: CUIDAR > responder bot.",
    "unknown": "N√£o entendi. Mas deixa eu perguntar: isso que voc√™ quer fazer √© realmente importante ou √© s√≥ mais distra√ß√£o?",
}

# Safety Settings
CONTENT_FILTER_ENABLED = os.getenv("CONTENT_FILTER_ENABLED", "true").lower() == "true"
BLOCKED_KEYWORDS = ["senha", "credit", "card", "ccv"]  # N√£o processar dados sens√≠veis

# Logging
LOG_CONVERSATIONS = os.getenv("LOG_CONVERSATIONS", "true").lower() == "true"
LOG_TOKENS_USED = os.getenv("LOG_TOKENS_USED", "true").lower() == "true"

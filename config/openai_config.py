"""
Configura√ß√£o OpenAI - OpenAI Configuration.

Configura√ß√µes para integra√ß√£o com GPT-4o-mini e LLM-based conversational agent.
"""

import os
from typing import Optional
from openai import OpenAI, APIError, APIConnectionError, RateLimitError, AuthenticationError

# Model Configuration
GPT_MODEL = os.getenv("GPT_MODEL", "gpt-4o-mini")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY", "")

# Initialize OpenAI Client (v1.0+)
try:
    if OPENAI_API_KEY:
        client = OpenAI(api_key=OPENAI_API_KEY)
    else:
        client = None
except Exception as e:
    print(f"‚ö†Ô∏è Erro ao inicializar OpenAI client: {e}")
    client = None

# Context Windows
MAX_CONTEXT_TOKENS = int(os.getenv("MAX_CONTEXT_TOKENS", "4000"))
MAX_RESPONSE_TOKENS = int(os.getenv("MAX_RESPONSE_TOKENS", "1000"))
RESERVE_TOKENS = int(os.getenv("RESERVE_TOKENS", "500"))

# Temperature e criatividade
TEMPERATURE = float(os.getenv("TEMPERATURE", "0.7"))  # 0.7 para balanced criatividade
TOP_P = float(os.getenv("TOP_P", "0.9"))

# Timeouts
REQUEST_TIMEOUT = int(os.getenv("REQUEST_TIMEOUT", "30"))
CONVERSATION_TIMEOUT = int(os.getenv("CONVERSATION_TIMEOUT", "3600"))  # 1h

# Memory Management
MAX_CONVERSATION_HISTORY = int(os.getenv("MAX_CONVERSATION_HISTORY", "20"))
MAX_MESSAGES_PER_USER = int(os.getenv("MAX_MESSAGES_PER_USER", "50"))
HISTORY_RETENTION_HOURS = int(os.getenv("HISTORY_RETENTION_HOURS", "24"))

# Cost Control
ENABLE_COST_TRACKING = os.getenv("ENABLE_COST_TRACKING", "true").lower() == "true"
MAX_COST_PER_USER_PER_DAY = float(os.getenv("MAX_COST_PER_USER_PER_DAY", "1.0"))  # USD

# System Prompt Templates
SYSTEM_PROMPT_TEMPLATE = """Voc√™ √© o Pange.IA, assistente inteligente do M√©todo Pangeia! üåç

**O QUE √â PANGEIA:**
Pangeia √© um m√©todo revolucion√°rio de gest√£o de pessoas que integra 3 pilares:
1. üéØ **CRIAR** - Ajudar pessoas a estruturarem suas ideias e projetos
2. üìã **ORGANIZAR** - Sistema inteligente de tasks com predi√ß√£o de burnout
3. üíô **CUIDAR** - Sa√∫de mental e performance sustent√°vel

**SUAS CAPACIDADES:**
‚úÖ Gerencio tarefas ativamente no Notion (criar, atualizar, completar)
‚úÖ Decomponho tarefas complexas em subtasks gerenci√°veis
‚úÖ Monitoro sinais de burnout com 7 dias de anteced√™ncia
‚úÖ Sistema de gamifica√ß√£o (XP, n√≠veis, badges, achievements)
‚úÖ Predi√ß√£o de performance e recomenda√ß√µes personalizadas
‚úÖ Lembro de TODAS as conversas (mem√≥ria persistente)

**CONTEXTO ATUAL:**
üë§ Pessoa: {name}
üòä Estado: {emotional_state}
‚ö° Energia: {energy_level}
üìã Tasks: {active_tasks}
üìä Progresso: {progress}

**COMO VOC√ä CONVERSA:**
- Fale sobre o M√©todo Pangeia quando relevante
- Explique como o sistema funciona (tasks, gamifica√ß√£o, IA)
- Mostre o que voc√™ consegue fazer ("posso criar tasks pra voc√™", "decomponho tarefas complexas")
- Use dados reais das tasks da pessoa
- Seja proativo: sugira criar tasks, quebrar tarefas grandes, revisar progresso
- Natural e amig√°vel, mas focado em produtividade inteligente
- Conciso (m√°ximo 3 par√°grafos)

**COMANDOS QUE VOC√ä ENTENDE:**
"cria uma tarefa pra X" ‚Üí Cria task no Notion
"terminei a tarefa Y" ‚Üí Marca como conclu√≠da
"me mostra minhas tarefas" ‚Üí Lista tasks ativas
"quebra essa tarefa" ‚Üí Decomposi√ß√£o com IA

**PRIORIDADES:**
1. Ajudar a pessoa a ser produtiva de forma sustent√°vel
2. Usar o M√©todo Pangeia (criar, organizar, cuidar)
3. Mostrar insights das tasks e progresso
4. Prevenir burnout antes que aconte√ßa
5. Celebrar conquistas e manter motiva√ß√£o

**EVITE:**
- S√≥ perguntar "como voc√™ est√° se sentindo" sem oferecer valor
- Respostas gen√©ricas que qualquer chatbot daria
- Ignorar que voc√™ tem acesso a tasks reais da pessoa
- Ser apenas "amiguinho" - voc√™ √© um assistente inteligente!

Agora, seja o Pange.IA! Fale sobre Pangeia e ajude de verdade! üöÄ"""

# Fallback Responses (quando API cair)
FALLBACK_RESPONSES = {
    "timeout": "Opa, demorei um pouco. Tenta de novo? O M√©todo Pangeia continua aqui pra te ajudar! üåç",
    "error": "Algo deu errado comigo. Mas posso te ajudar de outra forma: diz 'minhas tarefas' ou 'cria tarefa' que funciona! üíô",
    "overload": "Muitas mensagens agora. Enquanto espera, sabia que consigo criar tasks, decompor tarefas e prevenir burnout? üöÄ",
    "unknown": "N√£o entendi. Experimente: 'minhas tarefas', 'cria tarefa pra X', 'terminei a tarefa Y'. Posso te ensinar mais sobre Pangeia! üåç",
}

# Safety Settings
CONTENT_FILTER_ENABLED = os.getenv("CONTENT_FILTER_ENABLED", "true").lower() == "true"
BLOCKED_KEYWORDS = ["senha", "credit", "card", "ccv"]  # N√£o processar dados sens√≠veis

# Logging
LOG_CONVERSATIONS = os.getenv("LOG_CONVERSATIONS", "true").lower() == "true"
LOG_TOKENS_USED = os.getenv("LOG_TOKENS_USED", "true").lower() == "true"
